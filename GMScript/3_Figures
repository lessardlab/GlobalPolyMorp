### GPM Figures 
## Gabriel Mu√±oz _ dic 2020. 


### custom function to colorize https://gist.github.com/fgabriel1891
f <- function(x,n=10, pal, rev = F){
        if(rev == F){ 
                rev(RColorBrewer::brewer.pal(n, pal))[cut(x,n)]
        }else{
                (RColorBrewer::brewer.pal(n, pal))[cut(x,n)]
        }
}

### Function to plot a mixed effect model output with ggplot


plotModels <- function(myModelx){
        a<-plot_model(myModelx,type="pred",terms = "MAT.point [all]")+
                theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
                      panel.background = element_blank(), axis.line = element_line(colour = "black"),
                      text=element_text(family="Times New Roman", face="bold", size=20))+
                xlab("Temperature")+
                ylab("Predicted Probabilities of Worker Caste Polymorphism")+
                ggtitle("")+
                scale_y_continuous(breaks = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8),
                                   labels=scales::percent_format(accuracy = 1),limits=c(0,0.7));a
        
        b<-plot_model(myModelx,type="pred",terms = "MAP.point [all]")+
                theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
                      panel.background = element_blank(), axis.line = element_line(colour = "black"),
                      text=element_text(family="Times New Roman", face="bold", size=20))+
                xlab("Precipitation")+
                ylab("Predicted Probabilities of Worker Caste Polymorphism")+
                ggtitle("")+
                scale_y_continuous(breaks = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7),labels=scales::percent_format(accuracy = 1), limits = c(0,NA));b
        
        ggarrange(a,b)
}




### Download ocean layer 
URL <- "http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/physical/ne_110m_ocean.zip"
fil <- basename(URL)
if (!file.exists(fil)) download.file(URL, fil)
fils <- unzip(fil)
oceans <- rgdal::readOGR(grep("shp$", fils, value=TRUE), "ne_110m_ocean",
                         stringsAsFactors=FALSE, verbose=FALSE)



## Function to estimate the number of species per grid 

getPolyRich <- function(occ, poly = c(1,0)){
        dat <- (occ[occ$poly_id == poly,])
        myTab <- table(dat$new_id,dat$valid_species_name)
        myTab[myTab>1]<-1
        return(rowSums(myTab))
        
        
        
        
}

myTab


# Function to make a plot of the global distribution of polymorphism in ants 

makeWorldPlot <- function(occ, plotType = c("ratio", "density"), palName = "Spectral", plot= T, rev = T){
        myTab <- data.frame("poly1" = getPolyRich(occ, 1),"poly0" = getPolyRich(occ, 0))
        
        if(plotType == "ratio"){
                myTab$poly0[myTab$poly0 == 0] <- 0.1
                myTab$poly1[myTab$poly1 == 0] <- 0.1
                myTab$rat <- log(log1p(myTab$poly1) /log1p(myTab$poly0))
                # scale ratio to fit between -2,2 range 
                myTab$rat <- ifelse(myTab$rat < -2, -2, 
                                    ifelse(myTab$rat > 2, 2, myTab$rat))
                
                myTab <- data.frame(myTab,
                                    apply(stringr::str_split(rownames(myTab), "\\.", simplify = T),2, as.numeric),
                                    occ[match(rownames(myTab), occ$new_id),][c("MAP.point","MAT.point")])
                print("creating map object")
                myOBj <- reshape2::melt(xtabs(rat~X1+X2, myTab))
        
                
        }
        if(plotType == "density"){

                
                myTab <- data.frame(myTab,
                                    apply(stringr::str_split(rownames(myTab), "\\.", simplify = T),2, as.numeric),
                                    occ[match(rownames(myTab), occ$new_id),][c("MAP.point","MAT.point")])
                
                myTab$dens <- occ$point_density[match(paste0(myTab$X1,".",myTab$X2),occ$new_id)]
                myTab$Rich <- myTab$poly0+myTab$poly1
                # create a polymorphic density per total richness penalized by sampling
                myTab$PenDens <- (myTab$poly1/myTab$Rich)*(1/log1p(myTab$dens))
                
                print("creating map object")
                myOBj <- reshape2::melt(xtabs(PenDens~X1+X2, myTab))
                
        }
        if(plot == T){
                
                myOBj$value[myOBj$value == 0] <- NA
                myRas <- raster::rasterFromXYZ(myOBj, crs = oceans@proj4string)
                print("smoothing raster, a little patience here")
                r2 <- disaggregate(myRas,5, method="bilinear")
                r4 <- focal(r2, w= matrix(1,5,5), median)
                
                pal <- RColorBrewer::brewer.pal(n = 8, name = palName)
                
                if(rev == T){ 
                        pal <- rev(pal)
                        }
                
                
                plot(r4, 
                     ylim = c(-66.5,66.5)
                     ,axes = F, box = F, 
                     col = pal, colNA = scales::alpha("white",1))
                maps::map("world", add = T, interior = F)
                #plot(oceans, ylim = c(-70,70),add = T, col = scales::alpha("white", 0.3), lwd = 0.7)
                abline(h= seq(-50, 50, 25), v = seq(-150, 150, 25), col = "#4575b4", lwd = 0.2)
                print("done")
                cat("\014")
                
                
        }
        
  
        return(myTab)
}



# make the global ratio plot 
png("FiguresPaper/GlobalMapRatio.png", width = 900, height = 450, pointsize = 10)
par(mar = c(2,2,2,2))
makeWorldPlot(occ, "ratio", "Spectral", plot = T, rev = T)
dev.off()


png("FiguresPaper/GlobalMapDensity.png", width = 900, height = 450, pointsize = 10)
par(mar = c(2,2,2,2))
makeWorldPlot(occ, "density", "YlOrRd", plot = T, rev = F)
dev.off()

# Make the partial plots

## Myrmicinae
png("FiguresPaper/GlobalMapRatio_Myrm.png", width = 900, height = 450, pointsize = 10)
par(mar = c(2,2,2,2))
makeWorldPlot(droplevels(occ[occ$subFamily == "Myrmicinae",]), "ratio", "Spectral", plot = T, rev = T)
dev.off()


png("FiguresPaper/GlobalMapDensity_Myr.png", width = 900, height = 450, pointsize = 10)
par(mar = c(2,2,2,2))
makeWorldPlot(droplevels(occ[occ$subFamily == "Myrmicinae",]), "density", "YlOrRd", plot = T, rev = F)
dev.off()

## Formicinae
png("FiguresPaper/GlobalMapRatio_Form.png", width = 900, height = 450, pointsize = 10)
par(mar = c(2,2,2,2))
makeWorldPlot(droplevels(occ[occ$subFamily == "Formicinae",]), "ratio", "Spectral", plot = T, rev = T)
dev.off()


png("FiguresPaper/GlobalMapDensity_Form.png", width = 900, height = 450, pointsize = 10)
par(mar = c(2,2,2,2))
makeWorldPlot(droplevels(occ[occ$subFamily == "Formicinae",]), "density", "YlOrRd", plot = T, rev = F)
dev.off()

###############




##############################




## Plot the global distribution of ant polymorphism in climatic space 
# dataframe with all species
mt <- makeWorldPlot(occ, "ratio", "Spectral", plot = F, rev = T)
mt <- data.frame(mt,makeWorldPlot(occ, "density", "Spectral", plot = F, rev = T)[c("dens", "PenDens")])
mt$Temp <- MAT1$x[match(rownames(mt), stringr::str_replace( MAT1$Group.1, "_", "."))]
mt$Prec <- MAP1$x[match(rownames(mt), stringr::str_replace( MAP1$Group.1, "_", "."))]

mt$MAT_round <- round(mt$MAT.point, 2)
mt$MAP_round <- round(mt$MAP.point,2)

agg_mt <- aggregate(mt$rat, list(mt$MAT_round, mt$MAP_round), median)
agg_mt_dens <- aggregate(mt$dens, list(mt$MAT_round, mt$MAP_round), median)
agg_mt_Pdens <- aggregate(mt$PenDens, list(mt$MAT_round, mt$MAP_round), median)
###############

par(las = 1, oma = c(2,2,2,2))
### ratio 
plot(MAP1$x~MAT1$x, cex = 4, 
     xaxt = "n",
     yaxt = "n",
     col = "grey90", frame = F,
     xlab = "", 
     ylab = "",
     pch = ".", 
     ylim = c(-1,6))
points(agg_mt$Group.2~ agg_mt$Group.1, cex = 4, 
       col = scales::alpha(f(round(agg_mt$x), 6, "Spectral", F),0.5),
       #col = ifelse(mt$rat >1, "yellow", "red"),
       pch = ".")

abline(h = 0, v = 0, col = "grey50", lty = 2)
axis(1,seq(-2,1.5, 0.5), labels = c(-3.82-12.07*4, -3.82-12.07*3,-3.82-12.07*2,-3.82-12.07,-3.82,-3.82+12.07,-3.82+(12.07*2),-3.82+(12.07*3)))
axis(2,seq(-1,6, 1), labels = c(0,550.05,550.05+652.48,550.05+(652.48*2),550.05+(652.48*3),550.05+(652.48*4),550.05+(652.48*5),550.05+(652.48*6)))


### density 
plot(MAP1$x~MAT1$x, cex = 4, 
     xaxt = "n",
     yaxt = "n",
     col = "grey90", frame = F,
     xlab = "", 
     ylab = "",
     pch = ".", 
     ylim = c(-1,6))
points(agg_mt_Pdens$Group.2[agg_mt$x>0]~ agg_mt_Pdens$Group.1[agg_mt$x>0], cex = 4, 
       col = scales::alpha(f(log1p(agg_mt_Pdens$x[agg_mt_Pdens$x>0]), 3, "YlOrRd", T),0.5),
       #col = ifelse(mt$rat >1, "yellow", "red"),
       pch = ".")
abline(h = 0, v = 0, col = "grey50", lty = 2)
axis(1,seq(-2,1.5, 0.5), labels = c(-3.82-12.07*4, -3.82-12.07*3,-3.82-12.07*2,-3.82-12.07,-3.82,-3.82+12.07,-3.82+(12.07*2),-3.82+(12.07*3)))
axis(2,seq(-1,6, 1), labels = c(0,550.05,550.05+652.48,550.05+(652.48*2),550.05+(652.48*3),550.05+(652.48*4),550.05+(652.48*5),550.05+(652.48*6)))



################
## Myrmicinae
#################

# dataframe with all species
mt_myr <- makeWorldPlot(occ[occ$subFamily == "Myrmicinae",], "ratio", "Spectral", plot = F, rev = T)
mt_myr <- data.frame(mt_myr,makeWorldPlot(occ[occ$subFamily == "Myrmicinae",], plotType = "density", plot = F, rev = T)[c("dens", "PenDens")])
mt_myr$Temp <- MAT1$x[match(rownames(mt_myr), stringr::str_replace( MAT1$Group.1, "_", "."))]
mt_myr$Prec <- MAP1$x[match(rownames(mt_myr), stringr::str_replace( MAP1$Group.1, "_", "."))]

mt_myr$MAT_round <- round(mt_myr$MAT.point, 2)
mt_myr$MAP_round <- round(mt_myr$MAP.point, 2)

agg_mt_myr <- aggregate(mt_myr$rat, list(mt_myr$MAT_round, mt_myr$MAP_round), median)
agg_mt_dens_myr <- aggregate(mt_myr$dens, list(mt_myr$MAT_round, mt_myr$MAP_round), median)
agg_mt_Pdens_myr <- aggregate(mt_myr$PenDens, list(mt_myr$MAT_round, mt_myr$MAP_round), median)
###############

par(las = 1, oma = c(2,2,2,2))
### ratio 
plot(MAP1$x~MAT1$x, cex = 4, 
     xaxt = "n",
     yaxt = "n",
     col = "grey90", frame = F,
     xlab = "", 
     ylab = "",
     pch = ".", 
     ylim = c(-1,6))
points(agg_mt_myr$Group.2~ agg_mt_myr$Group.1, cex = 4, 
       col = scales::alpha(f(round(agg_mt_myr$x), 6, "Spectral", F),0.5),
       #col = ifelse(mt$rat >1, "yellow", "red"),
       pch = ".")

abline(h = 0, v = 0, col = "grey50", lty = 2)
axis(1,seq(-2,1.5, 0.5), labels = c(-3.82-12.07*4, -3.82-12.07*3,-3.82-12.07*2,-3.82-12.07,-3.82,-3.82+12.07,-3.82+(12.07*2),-3.82+(12.07*3)))
axis(2,seq(-1,6, 1), labels = c(0,550.05,550.05+652.48,550.05+(652.48*2),550.05+(652.48*3),550.05+(652.48*4),550.05+(652.48*5),550.05+(652.48*6)))


### density 
plot(MAP1$x~MAT1$x, cex = 4, 
     xaxt = "n",
     yaxt = "n",
     col = "grey90", frame = F,
     xlab = "", 
     ylab = "",
     pch = ".", 
     ylim = c(-1,6))
points(agg_mt_Pdens_myr$Group.2[agg_mt$x>0]~ agg_mt_Pdens_myr$Group.1[agg_mt$x>0], cex = 3, 
       col = scales::alpha(f((log1p(agg_mt_Pdens_myr$x[agg_mt$x>0])), 6, "YlOrRd", T),0.6),
       #col = ifelse(mt$rat >1, "yellow", "red"),
       pch = ".")
abline(h = 0, v = 0, col = "grey50", lty = 2)
axis(1,seq(-2,1.5, 0.5), labels = c(-3.82-12.07*4, -3.82-12.07*3,-3.82-12.07*2,-3.82-12.07,-3.82,-3.82+12.07,-3.82+(12.07*2),-3.82+(12.07*3)))
axis(2,seq(-1,6, 1), labels = c(0,550.05,550.05+652.48,550.05+(652.48*2),550.05+(652.48*3),550.05+(652.48*4),550.05+(652.48*5),550.05+(652.48*6)))




log1p(agg_mt_Pdens_myr$x[agg_mt$x<0])


hist(agg_mt$x)

################
## Formycinae
#################


# dataframe with all species
mt_for <- makeWorldPlot(occ[occ$subFamily == "Formicinae",], "ratio", "Spectral", plot = F, rev = T)
mt_for <- data.frame(mt_for,makeWorldPlot(occ[occ$subFamily == "Formicinae",], plotType = "density", plot = F, rev = T)[c("dens", "PenDens")])
mt_for$Temp <- MAT1$x[match(rownames(mt_for), stringr::str_replace( MAT1$Group.1, "_", "."))]
mt_for$Prec <- MAP1$x[match(rownames(mt_for), stringr::str_replace( MAP1$Group.1, "_", "."))]

mt_for$MAT_round <- round(mt_for$MAT.point, 2)
mt_for$MAP_round <- round(mt_for$MAP.point, 2)

agg_mt_for <- aggregate(mt_for$rat, list(mt_for$MAT_round, mt_for$MAP_round), median)
agg_mt_dens_for <- aggregate(mt_for$dens, list(mt_for$MAT_round, mt_for$MAP_round), median)
agg_mt_Pdens_for <- aggregate(mt_for$PenDens, list(mt_for$MAT_round, mt_for$MAP_round), median)
###############

par(las = 1, oma = c(2,2,2,2))
### ratio 
plot(MAP1$x~MAT1$x, cex = 4, 
     xaxt = "n",
     yaxt = "n",
     col = "grey90", frame = F,
     xlab = "", 
     ylab = "",
     pch = ".", 
     ylim = c(-1,6))
points(agg_mt_for$Group.2~ agg_mt_for$Group.1, cex = 4, 
       col = scales::alpha(f(round(agg_mt_for$x), 6, "Spectral", F),0.5),
       #col = ifelse(mt$rat >1, "yellow", "red"),
       pch = ".")

abline(h = 0, v = 0, col = "grey50", lty = 2)
axis(1,seq(-2,1.5, 0.5), labels = c(-3.82-12.07*4, -3.82-12.07*3,-3.82-12.07*2,-3.82-12.07,-3.82,-3.82+12.07,-3.82+(12.07*2),-3.82+(12.07*3)))
axis(2,seq(-1,6, 1), labels = c(0,550.05,550.05+652.48,550.05+(652.48*2),550.05+(652.48*3),550.05+(652.48*4),550.05+(652.48*5),550.05+(652.48*6)))


### density 
plot(MAP1$x~MAT1$x, cex = 4, 
     xaxt = "n",
     yaxt = "n",
     col = "grey90", frame = F,
     xlab = "", 
     ylab = "",
     pch = ".", 
     ylim = c(-1,6))
points(agg_mt_Pdens_for$Group.2[agg_mt$x>0]~ agg_mt_Pdens_for$Group.1[agg_mt$x>0], cex = 4, 
       col = scales::alpha(f((log1p(agg_mt_Pdens_for$x[agg_mt$x>0])), 6, "YlOrRd", T),0.5),
       #col = ifelse(mt$rat >1, "yellow", "red"),
       pch = ".")
abline(h = 0, v = 0, col = "grey50", lty = 2)
axis(1,seq(-2,1.5, 0.5), labels = c(-3.82-12.07*4, -3.82-12.07*3,-3.82-12.07*2,-3.82-12.07,-3.82,-3.82+12.07,-3.82+(12.07*2),-3.82+(12.07*3)))
axis(2,seq(-1,6, 1), labels = c(0,550.05,550.05+652.48,550.05+(652.48*2),550.05+(652.48*3),550.05+(652.48*4),550.05+(652.48*5),550.05+(652.48*6)))

#####################


head(mt)


par(mfrow = c(1,3), mar = c(4,4,2,2))
plot(log(mt$poly1),log(mt$poly0), 
     col = f(mt$rat, 6, "Spectral"),
     xlim = c(0,7), ylim = c(0,7),
     pch  =15, main = "All species", 
     cex.lab = 1.5,
     ylab = "Monomorphic richness (Log)", 
     xlab = "Polymorphic richness (Log)",
     frame = F)
abline(a=0,b=1)


plot(log(mt_myr$poly1),log(mt_myr$poly0), 
     col = f(mt_myr$rat, 6, "Spectral"),
     xlim = c(0,7), ylim = c(0,7),
     cex.lab = 1.5,
     pch  =15, main = "Myrmicinae",
     ylab = "Monomorphic richness (Log)", 
     xlab = "Polymorphic richness (Log)",
     frame = F)
abline(a=0,b=1)


plot(log(mt_for$poly1),log(mt_for$poly0), 
     col = f(mt_for$rat, 6, "Spectral"),
     xlim = c(0,7), ylim = c(0,7),
     cex.lab = 1.5,
     pch  =15, main = "Formicinae",
     ylab = "Monomorphic richness (Log)", 
     xlab = "Polymorphic richness (Log)",
     frame = F)
abline(a=0,b=1)


######## Richness vs environment tradeoffs

library(RStoolbox)


EnvStack <- raster::stack(MAP, MAT)

PCAras <- RStoolbox::rasterPCA(EnvStack)

dev.off()

##########
# ALL SPECIES
##########


png("FiguresPaper/EnvMapsALL.png", width = 1000, height = 1000, pointsize = 10)
par(mfrow = c(2,2), mar = c(1,1,1,1), oma = c(1,1,1,1))
plot(log(PCAras$map[[2]]+50), box=F, axes = F,
     legend = F, main = "Polymorphic species")
points(X2~X1, 
       data = mt[mt$rat>0,], pch = ".", 
       cex = log1p(PenDens)*2)
plot(log(PCAras$map[[2]]+50), box=F, axes = F, legend = F, main = "Monomorphic species")
points(X2~X1, 
       data = mt[mt$rat<0,], pch = ".", 
       cex = log1p(PenDens)*2)

plot(-log(PCAras$map[[1]]+1000), box=F, axes = F, legend = F, main = "Polymorphic species")
points(X2~X1, 
       data = mt[mt$rat>0,], pch = ".", 
       cex = log1p(PenDens)*2)

plot(-log(PCAras$map[[1]]+1000), box=F, axes = F, legend = F, main = "Monomorphic species")
points(X2~X1, 
       data = mt[mt$rat<0,], pch = ".", 
       cex = log1p(PenDens)*2)
dev.off()

##########
# Myrmicinae
##########

png("FiguresPaper/EnvMapsMyr.png", width = 1000, height = 1000, pointsize = 10)
par(mfrow = c(2,2), mar = c(1,1,1,1), oma = c(1,1,1,1))
plot(log(PCAras$map[[2]]+50), box=F, axes = F,
     legend = F, main = "Polymorphic species")
points(X2~X1, 
       data = mt_myr[mt_myr$rat>0,], pch = ".", 
       cex = log1p(PenDens)*2)
plot(log(PCAras$map[[2]]+50), box=F, axes = F, legend = F, main = "Monomorphic species")
points(X2~X1, 
       data = mt_myr[mt_myr$rat<0,], pch = ".", 
       cex = log1p(PenDens)*2)

plot(-log(PCAras$map[[1]]+1000), box=F, axes = F, legend = F, main = "Polymorphic species")
points(X2~X1, 
       data = mt_myr[mt_myr$rat>0,], pch = ".", 
       cex = log1p(PenDens)*2)

plot(-log(PCAras$map[[1]]+1000), box=F, axes = F, legend = F, main = "Monomorphic species")
points(X2~X1, 
       data = mt_myr[mt_myr$rat<0,], pch = ".", 
       cex = log1p(PenDens)*2)
dev.off()



##########
# Formycinae
##########

png("FiguresPaper/EnvMapsFor.png", width = 1000, height = 1000, pointsize = 10)
par(mfrow = c(2,2), mar = c(1,1,1,1), oma = c(1,1,1,1))
plot(log(PCAras$map[[2]]+50), box=F, axes = F,
     legend = F, main = "Polymorphic species")
points(X2~X1, 
       data = mt_for[mt_for$rat>0,], pch = ".", 
       cex = log1p(PenDens)*2)
plot(log(PCAras$map[[2]]+50), box=F, axes = F, legend = F, main = "Monomorphic species")
points(X2~X1, 
       data = mt_for[mt_for$rat<0,], pch = ".", 
       cex = log1p(PenDens)*2)

plot(-log(PCAras$map[[1]]+1000), box=F, axes = F, legend = F, main = "Polymorphic species")
points(X2~X1, 
       data = mt_for[mt_for$rat>0,], pch = ".", 
       cex = log1p(PenDens)*2)

plot(-log(PCAras$map[[1]]+1000), box=F, axes = F, legend = F, main = "Monomorphic species")
points(X2~X1, 
       data = mt_for[mt_for$rat<0,], pch = ".", 
       cex = log1p(PenDens)*2)
dev.off()








